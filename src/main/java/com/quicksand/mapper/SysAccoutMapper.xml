<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quicksand.dao.AccountRepository">
	<resultMap id="BaseResultMap" type="SysAccount">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="loginName" jdbcType="VARCHAR" property="loginName" />
		<result column="loginPwd" jdbcType="VARCHAR" property="loginPwd" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="isAffect" jdbcType="BIT" property="isAffect" />
		<result column="createTime" jdbcType="VARCHAR" property="createTime" />
		<result column="createUser" jdbcType="VARCHAR" property="createUser" />
	</resultMap>
	<sql id="Base_Column_List">
		id, loginName, loginPwd, state, isAffect, createTime, createUser
	</sql>
	<select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_account
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="findCount" resultType="java.lang.Long">
		select count(*) from sys_account
	</select>
	<delete id="delete" parameterType="java.lang.Long">
		delete from sys_account
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="SysAccount">
		insert into sys_account (id, loginName, loginPwd,
		state, isAffect, createTime,
		createUser)
		values (#{id,jdbcType=BIGINT}, #{loginName,jdbcType=VARCHAR},
		#{loginPwd,jdbcType=VARCHAR},
		#{state,jdbcType=INTEGER}, #{isAffect,jdbcType=BIT}, #{createTime,jdbcType=VARCHAR},
		#{createUser,jdbcType=VARCHAR})
	</insert>
	<insert id="save" parameterType="SysAccount">
		insert into sys_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginName != null">
				loginName,
			</if>
			<if test="loginPwd != null">
				loginPwd,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="isAffect != null">
				isAffect,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="createUser != null">
				createUser,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				#{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="isAffect != null">
				#{isAffect,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByNotNull" parameterType="SysAccount">
		update sys_account
		<set>
			<if test="loginName != null">
				loginName = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="loginPwd != null">
				loginPwd = #{loginPwd,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="isAffect != null">
				isAffect = #{isAffect,jdbcType=BIT},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=VARCHAR},
			</if>
			<if test="createUser != null">
				createUser = #{createUser,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="update" parameterType="SysAccount">
		update sys_account
		set loginName = #{loginName,jdbcType=VARCHAR},
		loginPwd = #{loginPwd,jdbcType=VARCHAR},
		state = #{state,jdbcType=INTEGER},
		isAffect = #{isAffect,jdbcType=BIT},
		createTime = #{createTime,jdbcType=VARCHAR},
		createUser = #{createUser,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<insert id="insertBatch" parameterType="java.util.List">
		insert into sys_account (id, loginName, loginPwd,
		state, isAffect, createTime,
		createUser)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id,jdbcType=BIGINT}, #{item.loginName,jdbcType=VARCHAR},
			#{item.loginPwd,jdbcType=VARCHAR},
			#{item.state,jdbcType=INTEGER}, #{item.isAffect,jdbcType=BIT}, #{item.createTime,jdbcType=VARCHAR},
			#{item.createUser,jdbcType=VARCHAR})
		</foreach>
	</insert>
</mapper>